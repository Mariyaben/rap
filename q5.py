# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rk8QdREAlLSqgKiMI3bgXyu84jhWf5MY
"""

from abc import abstractclassmethod
a=str(input("Enter any string "))
def s(a):
    l=len(a)
    print("\nsubstrings : ")
    for i in range(0,l+1):
        for j in range(i+1,l+1):
            substrings=a[i:j]
            print(substrings)

s(a)
k=int(input("Enter length "))
def length_k(s,k):
    l=len(s)
    for i in range(0,l+1):
        for j in range(i+1,l+1):
            substring=s[i:j]
            if len(substring)==k:
                print(substring)
length_k(a,k)
def dist(a,k):
    l=len(a)
    print("Distinct substring: ")
    for i in range(0,l+1):
        for j in range(i+1,l+1):
            substring=a[i:j]
            sett=set(substring)
            if len(substring)==k:
                if(len(sett)==k):
                    print(substring)
dist(a,k)
def pal():
    slic_e=a[::-1]
    if(slic_e==a):
        print("is Palindrome : ",slic_e)
    else:
        print("Not palindrome : ",slic_e)
pal()